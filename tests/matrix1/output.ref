
    -----------------------------------------------------------------------
          Psi4: An Open-Source Ab Initio Electronic Structure Package
                               Psi4 1.1rc3.dev5 

                         Git: Rev {master} 3fbd859 


    R. M. Parrish, L. A. Burns, D. G. A. Smith, A. C. Simmonett,
    A. E. DePrince III, E. G. Hohenstein, U. Bozkaya, A. Yu. Sokolov,
    R. Di Remigio, R. M. Richard, J. F. Gonthier, A. M. James,
    H. R. McAlexander, A. Kumar, M. Saitow, X. Wang, B. P. Pritchard,
    P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,
    F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,
    J. Chem. Theory Comput. in press (2017).
    (doi: 10.1021/acs.jctc.7b00174)

    -----------------------------------------------------------------------


    Psi4 started on: Monday, 15 May 2017 03:37PM

    Process ID:  14524
    PSIDATADIR: /home/psilocaluser/gits/hrw-direct/objdir4/stage/usr/local/psi4/share/psi4
    Memory:     500.0 MiB
    Threads:    1
    
  ==> Input File <==

--------------------------------------------------------------------------
#! An example of using BLAS and LAPACK calls directly from the Psi input file, demonstrating
#! matrix multiplication, eigendecomposition, Cholesky decomposition and LU decomposition.
#! These operations are performed on vectors and matrices provided from the Psi library.

# Example of matrix multiplication
print_out('\n  ==> Matrix Multiplication <== \n\n')

n = 3
A = psi4.Matrix(n, n)
B = psi4.Matrix(n, n)
C = psi4.Matrix(n, n)
A.name = 'A'
B.name = 'B'
C.name = 'C'

# The matrix set method takes 4 arguments: irrep, row, col, value
# Values are initialized to 0 by default
B.set(0, 0, 1, 1.0)
B.set(0, 1, 0, 2.0)
B.set(0, 2, 0, 3.0)

A.set(0, 0, 0, 2.0)
A.set(0, 1, 1, 2.0)
A.set(0, 2, 2, 2.0)

A.print_out()
B.print_out()

psi4.DGEMM(0, 'N', 'N', n, n, n, 1.0, A, n, B, n, 0.0, C, n)
C.print_out()

mmultRef = psi4.Matrix(n, n)                                                                         #TEST
mmultRef.name = "Matrix-Matrix Multiplication Reference"                                            #TEST
mmultRef.set(0, 0, 0, 0.0000000); mmultRef.set(0, 0, 1, 2.0000000); mmultRef.set(0, 0, 2, 0.0000000)   #TEST
mmultRef.set(0, 1, 0, 4.0000000); mmultRef.set(0, 1, 1, 0.0000000); mmultRef.set(0, 1, 2, 0.0000000)   #TEST
mmultRef.set(0, 2, 0, 6.0000000); mmultRef.set(0, 2, 1, 0.0000000); mmultRef.set(0, 2, 2, 0.0000000)   #TEST
compare_matrices(mmultRef, C, 6, "Matrix multiplication")                                              #TEST

print_out('\n  ==> Eigendecomposition (Hilbert Matrix) <== \n\n')

n = 4;
A = psi4.Matrix(n,n)
for i in range(1,n+1):
    for j in range(1,n+1):
        A.set(0, i-1, j-1, 1.0/(i + j - 1))
A.name = 'Hilbert Matrix'
A.print_out();

# Allocate a work array and some storage for the eigenvalues
W = psi4.Vector(4*n);
D = psi4.Vector(n);
# On input, A is the matrix and on output it contains the eigenvectors
info = psi4.DSYEV(0, 'V','U', n, A, n, D, W, 4*n)
A.name = "Eigenvectors"

# Make first element of eigenvector positive if desired
for i in range(1,n):
    if A.get(i,0) < 0 :
        A.scale_row(0, i, -1)
evecRef = psi4.Matrix(n,n)                                         #TEST
evecRef.set(0, 0, 0,  0.0291933); evecRef.set(0, 0, 1, -0.3287121) #TEST
evecRef.set(0, 0, 2,  0.7914111); evecRef.set(0, 0, 3, -0.5145527) #TEST
evecRef.set(0, 1, 0,  0.1791863); evecRef.set(0, 1, 1, -0.7419178) #TEST
evecRef.set(0, 1, 2,  0.1002281); evecRef.set(0, 1, 3,  0.6382825) #TEST
evecRef.set(0, 2, 0,  0.5820757); evecRef.set(0, 2, 1, -0.3705022) #TEST
evecRef.set(0, 2, 2, -0.5095786); evecRef.set(0, 2, 3, -0.5140483) #TEST
evecRef.set(0, 3, 0,  0.7926083); evecRef.set(0, 3, 1,  0.4519231) #TEST
evecRef.set(0, 3, 2,  0.3224164); evecRef.set(0, 3, 3,  0.2521612) #TEST
evecRef.name = "Reference Eigenvectors"                            #TEST
compare_matrices(evecRef, A, 6, "Eigenvectors")                    #TEST
evalRef = psi4.Vector(n)                                           #TEST
evalRef.set(0, 0, 0.0000967); evalRef.set(0, 1, 0.0067383)         #TEST
evalRef.set(0, 2, 0.1691412); evalRef.set(0, 3, 1.5002143)         #TEST
compare_vectors(evalRef, D, 6, "Eigenvalues")                      #TEST

print_out('  Eigenvalues')
D.print_out()
A.print_out()


print_out('\n  ==> Cholesky Decomposition (Hilbert Matrix) <== \n\n')

n = 4
A = psi4.Matrix(n,n)
for i in range(1,n+1):
    for j in range(1,n+1):
        A.set(0, i-1, j-1, 1.0/(i + j - 1))

A.name = 'Hilbert Matrix'
A.print_out()

info = psi4.DPOTRF(0, 'U', n, A, n)
for i in range(0,n):
    for j in range(i+1,n):
        A.set(0, i, j, 0.0)

cholRef = psi4.Matrix(n, n)                                       #TEST
cholRef.set(0, 0, 0, 1.0000000); cholRef.set(0, 0, 1, 0.0000000); #TEST
cholRef.set(0, 0, 2, 0.0000000); cholRef.set(0, 0, 3, 0.0000000); #TEST
cholRef.set(0, 1, 0, 0.5000000); cholRef.set(0, 1, 1, 0.2886751); #TEST
cholRef.set(0, 1, 2, 0.0000000); cholRef.set(0, 1, 3, 0.0000000); #TEST
cholRef.set(0, 2, 0, 0.3333333); cholRef.set(0, 2, 1, 0.2886751); #TEST
cholRef.set(0, 2, 2, 0.0745356); cholRef.set(0, 2, 3, 0.0000000); #TEST
cholRef.set(0, 3, 0, 0.2500000); cholRef.set(0, 3, 1, 0.2598076); #TEST
cholRef.set(0, 3, 2, 0.1118034); cholRef.set(0, 3, 3, 0.0188982); #TEST
cholRef.name = "Cholesky Decomposition Reference"                 #TEST
compare_matrices(cholRef, A, 6, "Cholesky Decomposition")         #TEST

A.name = 'Hilbert Matrix Cholesky Decomposition (T)'
A.print_out()


print_out('\n  ==> LU Decomposition (Hilbert Matrix) <== \n\n')

n = 4;
A = psi4.Matrix(n,n)
piv = psi4.IntVector(n)
for i in range(1,n+1):
    for j in range(1,n+1):
        A.set(0, i-1, j-1, 1.0/(i + j - 1))

A.name = 'Hilbert Matrix'
A.print_out();

info = psi4.DGETRF(0, n, n, A, n, piv)

luRef = psi4.Matrix(n, n)                                     #TEST
luRef.set(0, 0, 0,  1.0000000); luRef.set(0, 0, 1,  0.3333333); #TEST
luRef.set(0, 0, 2,  0.5000000); luRef.set(0, 0, 3,  0.2500000); #TEST
luRef.set(0, 1, 0,  0.5000000); luRef.set(0, 1, 1,  0.0833333); #TEST 
luRef.set(0, 1, 2,  1.0000000); luRef.set(0, 1, 3,  0.9000000); #TEST
luRef.set(0, 2, 0,  0.3333333); luRef.set(0, 2, 1,  0.0888889); #TEST
luRef.set(0, 2, 2, -0.0055556); luRef.set(0, 2, 3, -0.6000000); #TEST
luRef.set(0, 3, 0,  0.2500000); luRef.set(0, 3, 1,  0.0833333); #TEST
luRef.set(0, 3, 2, -0.0083333); luRef.set(0, 3, 3,  0.0003571); #TEST
luRef.name = "LU Decomposition Reference"                       #TEST
compare_matrices(luRef, A, 6, "LU Decomposition")               #TEST

A.name = 'Hilbert Matrix LU Decomposition (T)'
A.print_out()
--------------------------------------------------------------------------

  ==> Matrix Multiplication <== 

  ## A (Symmetry 0) ##
  Irrep: 1 Size: 3 x 3

                 1                   2                   3

    1     2.00000000000000     0.00000000000000     0.00000000000000
    2     0.00000000000000     2.00000000000000     0.00000000000000
    3     0.00000000000000     0.00000000000000     2.00000000000000



  ## B (Symmetry 0) ##
  Irrep: 1 Size: 3 x 3

                 1                   2                   3

    1     0.00000000000000     1.00000000000000     0.00000000000000
    2     2.00000000000000     0.00000000000000     0.00000000000000
    3     3.00000000000000     0.00000000000000     0.00000000000000



  ## C (Symmetry 0) ##
  Irrep: 1 Size: 3 x 3

                 1                   2                   3

    1     0.00000000000000     2.00000000000000     0.00000000000000
    2     4.00000000000000     0.00000000000000     0.00000000000000
    3     6.00000000000000     0.00000000000000     0.00000000000000



	Matrix multiplication.............................................PASSED

  ==> Eigendecomposition (Hilbert Matrix) <== 

  ## Hilbert Matrix (Symmetry 0) ##
  Irrep: 1 Size: 4 x 4

                 1                   2                   3                   4

    1     1.00000000000000     0.50000000000000     0.33333333333333     0.25000000000000
    2     0.50000000000000     0.33333333333333     0.25000000000000     0.20000000000000
    3     0.33333333333333     0.25000000000000     0.20000000000000     0.16666666666667
    4     0.25000000000000     0.20000000000000     0.16666666666667     0.14285714285714



	Eigenvectors......................................................PASSED
	Eigenvalues.......................................................PASSED
  Eigenvalues
 #  #
 Irrep: 1
      1:  0.0000967
      2:  0.0067383
      3:  0.1691412
      4:  1.5002143

  ## Eigenvectors (Symmetry 0) ##
  Irrep: 1 Size: 4 x 4

                 1                   2                   3                   4

    1     0.02919332316478    -0.32871205576318     0.79141114583312    -0.51455274999716
    2     0.17918629053546    -0.74191779062846     0.10022813694721     0.63828252819361
    3     0.58207569949724    -0.37050218506709    -0.50957863450180    -0.51404827222216
    4     0.79260829116376     0.45192312090160     0.32241639858182     0.25216116968824




  ==> Cholesky Decomposition (Hilbert Matrix) <== 

  ## Hilbert Matrix (Symmetry 0) ##
  Irrep: 1 Size: 4 x 4

                 1                   2                   3                   4

    1     1.00000000000000     0.50000000000000     0.33333333333333     0.25000000000000
    2     0.50000000000000     0.33333333333333     0.25000000000000     0.20000000000000
    3     0.33333333333333     0.25000000000000     0.20000000000000     0.16666666666667
    4     0.25000000000000     0.20000000000000     0.16666666666667     0.14285714285714



	Cholesky Decomposition............................................PASSED
  ## Hilbert Matrix Cholesky Decomposition (T) (Symmetry 0) ##
  Irrep: 1 Size: 4 x 4

                 1                   2                   3                   4

    1     1.00000000000000     0.00000000000000     0.00000000000000     0.00000000000000
    2     0.50000000000000     0.28867513459481     0.00000000000000     0.00000000000000
    3     0.33333333333333     0.28867513459481     0.07453559924999     0.00000000000000
    4     0.25000000000000     0.25980762113533     0.11180339887499     0.01889822365046




  ==> LU Decomposition (Hilbert Matrix) <== 

  ## Hilbert Matrix (Symmetry 0) ##
  Irrep: 1 Size: 4 x 4

                 1                   2                   3                   4

    1     1.00000000000000     0.50000000000000     0.33333333333333     0.25000000000000
    2     0.50000000000000     0.33333333333333     0.25000000000000     0.20000000000000
    3     0.33333333333333     0.25000000000000     0.20000000000000     0.16666666666667
    4     0.25000000000000     0.20000000000000     0.16666666666667     0.14285714285714



	LU Decomposition..................................................PASSED
  ## Hilbert Matrix LU Decomposition (T) (Symmetry 0) ##
  Irrep: 1 Size: 4 x 4

                 1                   2                   3                   4

    1     1.00000000000000     0.33333333333333     0.50000000000000     0.25000000000000
    2     0.50000000000000     0.08333333333333     1.00000000000000     0.90000000000000
    3     0.33333333333333     0.08888888888889    -0.00555555555556    -0.60000000000000
    4     0.25000000000000     0.08333333333333    -0.00833333333333     0.00035714285714




*** Psi4 exiting successfully. Buy a developer a beer!
